language: bash
services:
  - docker

env:
  matrix:
  - SHELLCHECK=true
  - VENDOR=ubuntu BASH_TAR_VERSION=4.4    BASH_IMAGE=ubuntu:20.04
  - VENDOR=ubuntu BASH_TAR_VERSION=5.0    BASH_IMAGE=ubuntu:20.04
  - VENDOR=ubuntu BASH_TAR_VERSION=5.1    BASH_IMAGE=ubuntu:20.04
  - VENDOR=alpine BASH_TAR_VERSION=4.4    BASH_IMAGE=bash:4.4
  - VENDOR=alpine BASH_TAR_VERSION=5.0.18 BASH_IMAGE=bash:5.0.18
  - VENDOR=alpine BASH_TAR_VERSION=5.1    BASH_IMAGE=bash:rc

before_script:
  - |
   if [[ "${TRAVIS_OS_NAME:-}" == 'linux' && "$SHELLCHECK" == 'true' ]]; then
     sudo apt-get install -y shellcheck
   else 
    "./installBuildDeps.sh"
    docker pull scrasnups/build:bash-tools-${VENDOR}-${BASH_TAR_VERSION} || true 
    docker build 
    -f .docker/Dockerfile.${VENDOR} 
    --pull 
    --cache-from "scrasnups/build:bash-tools-${VENDOR}-${BASH_TAR_VERSION}" 
    --build-arg BASH_TAR_VERSION=${BASH_TAR_VERSION} 
    --build-arg BASH_IMAGE=${BASH_IMAGE} 
    -t bash-tools-${VENDOR}-${BASH_TAR_VERSION} 
    .docker
    docker run bash-tools-${VENDOR}-${BASH_TAR_VERSION} bash --version
    docker tag bash-tools-${VENDOR}-${BASH_TAR_VERSION}:latest scrasnups/build:bash-tools-${VENDOR}-${BASH_TAR_VERSION}
    echo "$DOCKER_PASSWORD" | docker login --username "$DOCKER_USERNAME" --password-stdin
    docker push scrasnups/build:bash-tools-${VENDOR}-${BASH_TAR_VERSION}
  fi

script:
- |
  if [[ "${TRAVIS_OS_NAME:-}" == 'linux' && "$SHELLCHECK" == 'true' ]]; then
    ./shellcheck.sh > shellcheck.log
    
    # Install deepsource CLI
    curl https://deepsource.io/cli | sh
    
    # Report coverage artifact to 'test-coverage' analyzer
    ./bin/deepsource report --analyzer shell --key shellcheck --value-file ./shellcheck.log

    exit $?
  else
    docker run --rm -it -v $PWD:/bash --user $(id -u):$(id -g) --workdir /bash bash-tools-${VENDOR}-${BASH_TAR_VERSION}
      /bash/vendor/bats/bin/bats -r tests
  fi