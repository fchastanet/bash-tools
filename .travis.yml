language: bash
services:
  - docker

env:
  matrix:
  - VENDOR=ubuntu BASH_TAR_VERSION=4.4    BASH_IMAGE=ubuntu:20.04
  - VENDOR=ubuntu BASH_TAR_VERSION=5.0    BASH_IMAGE=ubuntu:20.04
  - VENDOR=ubuntu BASH_TAR_VERSION=5.1     BASH_IMAGE=ubuntu:20.04
  - VENDOR=alpine BASH_TAR_VERSION=4.4    BASH_IMAGE=bash:4.4
  - VENDOR=alpine BASH_TAR_VERSION=5.0.18 BASH_IMAGE=bash:5.0.18
  - VENDOR=alpine BASH_TAR_VERSION=5.1     BASH_IMAGE=bash:rc

before_script:
  - "./installBuildDeps.sh"
  - echo "$DOCKER_USERNAME"
  - docker pull scrasnups/build:bash-tools-${VENDOR}-${BASH_TAR_VERSION} || true
  - > 
      docker build 
      -f .docker/Dockerfile.${VENDOR} 
      --pull 
      --cache-from "scrasnups/build:bash-tools-${VENDOR}-${BASH_TAR_VERSION}" 
      --build-arg BASH_TAR_VERSION=${BASH_TAR_VERSION} 
      --build-arg BASH_IMAGE=${BASH_IMAGE} 
      -t bash-tools-${VENDOR}-${BASH_TAR_VERSION} 
      .docker
  - docker run bash-tools-${VENDOR}-${BASH_TAR_VERSION} bash --version
  - docker tag bash-tools-${VENDOR}-${BASH_TAR_VERSION}:latest scrasnups/build:bash-tools-${VENDOR}-${BASH_TAR_VERSION}
  - echo "$DOCKER_PASSWORD" | docker login --username "$DOCKER_USERNAME" --password-stdin
  - docker push scrasnups/build:bash-tools-${VENDOR}-${BASH_TAR_VERSION}

script:
- docker run --rm -v $PWD:/bash --user $(id -u):$(id -g) bash-tools-${VENDOR}-${BASH_TAR_VERSION}
  /bash/test.sh

