ARG BASH_IMAGE=ubuntu:20.04
FROM ${BASH_IMAGE}

SHELL ["/bin/bash", "-o", "pipefail", "-c"]
ARG BASH_TAR_VERSION=5.1
SHELL ["/bin/bash", "-o", "pipefail", "-c"]
RUN set -x \
  && set -o errexit \
  && echo 'debconf debconf/frontend select Noninteractive' | debconf-set-selections \
  && apt-get update \
  && apt-get install -y -q --no-install-recommends \
    build-essential \ 
    ca-certificates \
    curl \
    bison \
    git \
    gzip \
    \
  && ( \
    cd /tmp \
    && curl \
      -o bash.tar.gz "https://ftp.gnu.org/gnu/bash/bash-${BASH_TAR_VERSION}.tar.gz" \
    && tar xzf bash.tar.gz \
    && cd bash-${BASH_TAR_VERSION} \
    && ./configure \
    && make install \
  ) \
  \
  # clean apt packages
  && apt-get remove -y ca-certificates curl bison build-essential \
  && apt-get -y clean \
  && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* /usr/share/doc/*

ENV IN_BASH_DOCKER="You're in docker"
WORKDIR /bash

ONBUILD ARG USER_ID=1000
ONBUILD ARG GROUP_ID=1000
ONBUILD SHELL ["/bin/bash", "-o", "pipefail", "-c"]
ONBUILD RUN set -x \
    && set -o errexit \
    \
    && if [ ${USER_ID:-0} -ne 0 ] && [ ${GROUP_ID:-0} -ne 0 ]; then \
      EXISTINGGROUP=$(awk -v val="${GROUP_ID}" -F ":" '$3==val{print $1}' /etc/group) &&\
      if [ -n "$EXISTINGGROUP" ] ; then groupdel $EXISTINGGROUP ; fi &&\
      userdel -f www-data &&\
      if getent group www-data ; then groupdel www-data; fi &&\
      groupadd -g ${GROUP_ID} www-data &&\
      useradd -l -u ${USER_ID} -g www-data www-data &&\
      install -d -m 0755 -o www-data -g www-data /home/www-data; \
    fi