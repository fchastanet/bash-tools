{
  "info": {
    "_postman_id": "85fdf02d-7ffb-4699-923a-be8bfba16071",
    "name": "OpenApis",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "_exporter_id": "27246549"
  },
  "item": [
    {
      "name": "MongoDBDataAPI",
      "item": [
        {
          "name": "Insert Document",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/{{CONTENT_TYPE}}"
              },
              {
                "key": "Access-Control-Request-Headers",
                "value": "*"
              },
              {
                "key": "api-key",
                "value": "{{API_KEY}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n      \"dataSource\": \"{{DATA_SOURCE}}\",\n      \"database\": \"{{DATABASE}}\",\n      \"collection\": \"{{COLLECTION}}\",\n      \"document\": {\n        \"name\": \"John Sample\",\n        \"age\": 42\n      }\n  }"
            },
            "url": {
              "raw": "{{URL_ENDPOINT}}/action/insertOne",
              "host": ["{{URL_ENDPOINT}}"],
              "path": ["action", "insertOne"]
            },
            "description": "Using the `/insertOne` endpoint, you can add a document to a collection. Use the `document` property in the request body to specify the document that should be created."
          },
          "response": []
        },
        {
          "name": "Find Document",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/{{CONTENT_TYPE}}"
              },
              {
                "key": "Access-Control-Request-Headers",
                "value": "*"
              },
              {
                "key": "api-key",
                "value": "{{API_KEY}}"
              },
              {
                "key": "Accept",
                "value": "application/{{CONTENT_TYPE}}",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n      \"dataSource\": \"{{DATA_SOURCE}}\",\n      \"database\": \"{{DATABASE}}\",\n      \"collection\": \"{{COLLECTION}}\",\n      \"filter\": { \"name\": \"John Sample\" }\n  }"
            },
            "url": {
              "raw": "{{URL_ENDPOINT}}/action/findOne",
              "host": ["{{URL_ENDPOINT}}"],
              "path": ["action", "findOne"]
            },
            "description": "Using the `/findOne` endpoint will let you retrieve a single document from a collection. Use the `filter` property in the request body to specify the search criteria. If more than one document matches the criteria, only the first match will be returned."
          },
          "response": []
        },
        {
          "name": "Update Document",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/{{CONTENT_TYPE}}"
              },
              {
                "key": "Access-Control-Request-Headers",
                "value": "*"
              },
              {
                "key": "api-key",
                "value": "{{API_KEY}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n      \"dataSource\": \"{{DATA_SOURCE}}\",\n      \"database\": \"{{DATABASE}}\",\n      \"collection\": \"{{COLLECTION}}\",\n      \"filter\": { \"name\": \"John Sample\" },\n      \"update\": { \"$set\": { \"age\": 24 } }\n  }"
            },
            "url": {
              "raw": "{{URL_ENDPOINT}}/action/updateOne",
              "host": ["{{URL_ENDPOINT}}"],
              "path": ["action", "updateOne"]
            },
            "description": "You can use the `/updateOne` endpoint to update a single record. Use the `filter` property in the request body to specify the search criteria. If more than one document matches the criteria, only the first match will be returned. Then use the `update` field to specify what should be updated. You should use one of the [update operators](https://docs.mongodb.com/manual/reference/operator/update-field/) to update your documents."
          },
          "response": []
        },
        {
          "name": "Delete Document",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/{{CONTENT_TYPE}}"
              },
              {
                "key": "Access-Control-Request-Headers",
                "value": "*"
              },
              {
                "key": "api-key",
                "value": "{{API_KEY}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n      \"dataSource\": \"{{DATA_SOURCE}}\",\n      \"database\": \"{{DATABASE}}\",\n      \"collection\": \"{{COLLECTION}}\",\n      \"filter\": { \"name\": \"John Sample\" }\n  }"
            },
            "url": {
              "raw": "{{URL_ENDPOINT}}/action/deleteOne",
              "host": ["{{URL_ENDPOINT}}"],
              "path": ["action", "deleteOne"]
            },
            "description": "To delete a single document, use the `/deleteOne` endpoint. Use the `filter` property in the request body to specify the search criteria. If more than one document matches the criteria, only the first match will be deleted."
          },
          "response": []
        },
        {
          "name": "Insert Multiple Documents",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/{{CONTENT_TYPE}}"
              },
              {
                "key": "Access-Control-Request-Headers",
                "value": "*"
              },
              {
                "key": "api-key",
                "value": "{{API_KEY}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n      \"dataSource\": \"{{DATA_SOURCE}}\",\n      \"database\": \"{{DATABASE}}\",\n      \"collection\": \"{{COLLECTION}}\",\n      \"documents\": [{\n        \"name\": \"John Sample\",\n        \"age\": 42\n      },{\n        \"name\": \"Mister Postman\",\n        \"age\": 37\n      },{\n        \"name\": \"Miss MongoDB\",\n        \"age\": 35\n      }]\n  }"
            },
            "url": {
              "raw": "{{URL_ENDPOINT}}/action/insertMany",
              "host": ["{{URL_ENDPOINT}}"],
              "path": ["action", "insertMany"]
            },
            "description": "You can add more than one document at a time by using the `/insertMany` endpoint. In that case, you must use the `documents` property in the body of the request to specify the array of documents you want to insert into the collection."
          },
          "response": []
        },
        {
          "name": "Find Multiple Documents",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/{{CONTENT_TYPE}}"
              },
              {
                "key": "Access-Control-Request-Headers",
                "value": "*"
              },
              {
                "key": "api-key",
                "value": "{{API_KEY}}"
              },
              {
                "key": "Accept",
                "value": "application/{{CONTENT_TYPE}}",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n      \"dataSource\": \"{{DATA_SOURCE}}\",\n      \"database\": \"{{DATABASE}}\",\n      \"collection\": \"{{COLLECTION}}\",\n      \"filter\": { \"age\": { \"$lt\": 40 } }\n  }"
            },
            "url": {
              "raw": "{{URL_ENDPOINT}}/action/find",
              "host": ["{{URL_ENDPOINT}}"],
              "path": ["action", "find"]
            },
            "description": "Using the `/find` endpoint, you can fetch multiple documents at once. Use the `filter` property in the body of the request to specify the criteria on which to filter. If you pass an empty object `{ }`, all the documents in the collection will be returned."
          },
          "response": []
        },
        {
          "name": "Update Multiple Documents",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/{{CONTENT_TYPE}}"
              },
              {
                "key": "Access-Control-Request-Headers",
                "value": "*"
              },
              {
                "key": "api-key",
                "value": "{{API_KEY}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n      \"dataSource\": \"{{DATA_SOURCE}}\",\n      \"database\": \"{{DATABASE}}\",\n      \"collection\": \"{{COLLECTION}}\",\n      \"filter\": { \"age\": { \"$lt\": 40 } },\n      \"update\": { \"$set\": { \"age\": 42 } }\n  }"
            },
            "url": {
              "raw": "{{URL_ENDPOINT}}/action/updateMany",
              "host": ["{{URL_ENDPOINT}}"],
              "path": ["action", "updateMany"]
            },
            "description": "Using `/updateMany`, you can update all the documents matching a specific `filter` specified in the body of the request. Use one of the [update operators](https://docs.mongodb.com/manual/reference/operator/update-field/) in the `update` field to update your documents."
          },
          "response": []
        },
        {
          "name": "Delete Many Documents",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/{{CONTENT_TYPE}}"
              },
              {
                "key": "Access-Control-Request-Headers",
                "value": "*"
              },
              {
                "key": "api-key",
                "value": "{{API_KEY}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n      \"dataSource\": \"{{DATA_SOURCE}}\",\n      \"database\": \"{{DATABASE}}\",\n      \"collection\": \"{{COLLECTION}}\",\n      \"filter\": { }\n  }"
            },
            "url": {
              "raw": "{{URL_ENDPOINT}}/action/deleteMany",
              "host": ["{{URL_ENDPOINT}}"],
              "path": ["action", "deleteMany"]
            },
            "description": "You can use `/deleteMany` to delete multiple documents at once. Use the `filter` property to specify which documents to delete.  \n  \n**Warning**: Using `filter: { }` will delete all the documents in the collection. Use `/deleteMany` with care."
          },
          "response": []
        },
        {
          "name": "Run Aggregation Pipeline",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/{{CONTENT_TYPE}}"
              },
              {
                "key": "Access-Control-Request-Headers",
                "value": "*"
              },
              {
                "key": "api-key",
                "value": "{{API_KEY}}"
              },
              {
                "key": "Accept",
                "value": "application/{{CONTENT_TYPE}}",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n      \"dataSource\": \"{{DATA_SOURCE}}\",\n      \"database\": \"{{DATABASE}}\",\n      \"collection\": \"{{COLLECTION}}\",\n      \"pipeline\": [\n          {\n              \"$sort\": { \"age\": 1 }\n          },\n          {\n              \"$limit\": 1\n          }\n      ]\n  }"
            },
            "url": {
              "raw": "{{URL_ENDPOINT}}/action/aggregate",
              "host": ["{{URL_ENDPOINT}}"],
              "path": ["action", "aggregate"]
            },
            "description": "You can even run [aggregation pipelines](https://docs.mongodb.com/manual/core/aggregation-pipeline/) with the Data API. To do so, use the `/aggregate` endpoint and specify your pipeline in the `pipeline` field of the request body."
          },
          "response": []
        }
      ],
      "event": [
        {
          "listen": "prerequest",
          "script": {
            "type": "text/javascript",
            "exec": [""]
          }
        },
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [""]
          }
        }
      ]
    },
    {
      "name": "GitHubAPI-01-Basic_no_auth",
      "item": [
        {
          "name": "search repos",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/search/repositories?q=postman&order=desc&per_page=30",
              "host": ["{{baseUrl}}"],
              "path": ["search", "repositories"],
              "query": [
                {
                  "key": "q",
                  "value": "postman"
                },
                {
                  "key": "order",
                  "value": "desc"
                },
                {
                  "key": "per_page",
                  "value": "30"
                }
              ]
            },
            "description": "Searches repositories based on keywords `q`"
          },
          "response": []
        },
        {
          "name": "user info",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/users/:owner",
              "host": ["{{baseUrl}}"],
              "path": ["users", ":owner"],
              "variable": [
                {
                  "key": "owner",
                  "value": "octocat",
                  "description": "username or organization name you would like information about"
                }
              ]
            },
            "description": "Get information about the given user. \n\nMore detailed information is given if the requested user is the currently authorized user."
          },
          "response": []
        },
        {
          "name": "user repos",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/users/:owner/repos",
              "host": ["{{baseUrl}}"],
              "path": ["users", ":owner", "repos"],
              "variable": [
                {
                  "key": "owner",
                  "value": "octocat",
                  "description": "username or organization name whose repos you would like to see"
                }
              ]
            },
            "description": "Lists all public repos for a given user"
          },
          "response": []
        }
      ],
      "event": [
        {
          "listen": "prerequest",
          "script": {
            "type": "text/javascript",
            "exec": [""]
          }
        },
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [""]
          }
        }
      ]
    }
  ]
}
