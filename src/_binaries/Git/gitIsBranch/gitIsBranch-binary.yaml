extends:
  - "${BASH_TOOLS_ROOT_DIR}/src/_binaries/Git/gitToolsDefaultOptions.yaml"
  - "${BASH_TOOLS_ROOT_DIR}/src/_binaries/commandDefinitions/optionsVersion.yaml"
  - "${BASH_TOOLS_ROOT_DIR}/src/_binaries/commandDefinitions/optionsDefault.yaml"
  - "${FRAMEWORK_ROOT_DIR}/src/_binaries/commandDefinitions/defaultCommand.yaml"
  - "${FRAMEWORK_ROOT_DIR}/src/_binaries/commandDefinitions/frameworkConfig.yaml"

vars:
  SRC_FILE_PATH: src/_binaries/Git/gitIsBranch/gitIsBranch-binary.yaml

compilerConfig:
  targetFile: "${BASH_TOOLS_ROOT_DIR}/bin/gitIsBranch"

binData:
  commands:
    default:
      functionName: gitIsBranchCommand
      version: "3.0"
      copyrightBeginYear: 2020
      commandName: gitIsBranch
      beforeParseCallbacks:
        - beforeParseCallback
      definitionFiles:
        20: ${BASH_TOOLS_ROOT_DIR}/src/_binaries/Git/gitIsBranch/gitIsBranch-options.sh
      mainFile: ${BASH_TOOLS_ROOT_DIR}/src/_binaries/Git/gitIsBranch/gitIsBranch-main.sh
      help: Show an error if branchName is not a known branch.
      longDescription: longDescriptionFunction
      args:
        - type: String
          min: 1
          max: 1
          help: The branch name to check.
          name: branchName
          variableName: branchNameArg
