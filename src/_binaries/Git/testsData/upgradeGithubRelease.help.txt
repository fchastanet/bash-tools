[1;37mDESCRIPTION:[0m retrieve latest binary release from github and install it

[1;37mUSAGE:[0m upgradeGithubRelease [OPTIONS] [ARGUMENTS]
[1;37mUSAGE:[0m upgradeGithubRelease [--version-arg <versionArg>]
  [--current-version|-c <currentVersion>] [--exact-version|-e <exactVersion>]
  [--minimal-version|-m <minimalVersion>] [--bash-framework-config <String>]
  [--config] [--verbose|-v] [-vv] [-vvv] [--env-file <String>] [--no-color]
  [--theme <String>] [--help|-h] [--version] [--quiet|-q] [--log-level <String>]
  [--log-file <String>] [--display-level <String>]

[1;37mARGUMENTS:[0m
  [1;34mtargetFile[0m {single} (mandatory)
    the binary downloaded will e written to this file path. Ensure the path is w
    ritable.
  [1;34mgithubUrlPattern[0m {single} (mandatory)
    the url pattern to use to download the binary, see examples below.
     @version@ is template variable that will be replaced by the latest
     version tag found on github.

[1;37mVERSION MANAGEMENT:[0m
  [1;34m--version-arg <versionArg>[0m {single}
    The argument that will be provided to the currently installed binary  to che
    ck the version of the software.  This parameter is needed if [2;97m--minim
    al-version[0m argument is used and is  different than default value ([
    2;97m--version[0m).
    Default value: --version
  [1;34m--current-version[0m, [1;34m-c <currentVersion>[0m {single}
    Sometimes the command to retrieve the version is complicated.  Some comman
    d needs you to parse json or other commands provides  multiple sub comma
    nd versions. In this case you can provide the  version you currently hav
    e, see examples below.
  [1;34m--exact-version[0m, [1;34m-e <exactVersion>[0m {single}
    if provided and currently installed binary is not this [2;97mexactVersion[0m,
     This exact version of the binary will be installed.
  [1;34m--minimal-version[0m, [1;34m-m <minimalVersion>[0m {single}
    if provided and currently installed binary is below this [2;97mminimalVersion[0m,
     a new version of the binary will be installed.  If this argument is not pr
    ovided, the latest binary is unconditionally downloaded from github.

[1;37mGLOBAL OPTIONS:[0m
  [1;34m--bash-framework-config <String>[0m {single}
    use alternate bash framework configuration.
  [1;34m--config[0m {single}
    Display configuration
  [1;34m--verbose[0m, [1;34m-v[0m {single}
    info level verbose mode (alias of --display-level INFO)
  [1;34m-vv[0m {single}
    debug level verbose mode (alias of --display-level DEBUG)
  [1;34m-vvv[0m {single}
    trace level verbose mode (alias of --display-level TRACE)
  [1;34m--env-file <String>[0m {list} (optional)
    Load the specified env file
  [1;34m--no-color[0m {single}
    Produce monochrome output. alias of --theme noColor.
  [1;34m--theme <String>[0m {single}
    choose color theme (default, default-force or noColor) - default-force means
     colors will be produced even if command is piped
  [1;34m--help[0m, [1;34m-h[0m {single}
    Display this command help
  [1;34m--version[0m {single}
    Print version information and quit
  [1;34m--quiet[0m, [1;34m-q[0m {single}
    quiet mode, doesn't display any output
  [1;34m--log-level <String>[0m {single}
    Set log level (one of OFF, ERROR, WARNING, INFO, DEBUG, TRACE value)
  [1;34m--log-file <String>[0m {single}
    Set log file
  [1;34m--display-level <String>[0m {single}
    set display level (one of OFF, ERROR, WARNING, INFO, DEBUG, TRACE value)

[1;37mOPTIONS EXCEPTIONS:[0m

[2;97m--current-version[0m|[2;97m-c[0m and [2;97m--version-arg[0m are mutually exclusive,
you cannot use both argument at the same time.

[2;97m--exact-version[0m|[2;97m-e[0m and [2;97m--minimal-version[0m|[2;97m-m[0m are mutually exclusive,
you cannot use both argument at the same time.

[1;37mGITHUB TEMPLATE URLS EXAMPLES:[0m

Simple ones(Sometimes @version@ template variable has to be specified twice):
'https://github.com/hadolint/hadolint/releases/download/v@version@/hadolint-Linux-x86_64'
'https://github.com/koalaman/shellcheck/releases/download/v@version@/shellcheck-v@version@.linux.x86_64.tar.xz'
'https://github.com/sharkdp/fd/releases/download/v@version@/fd_@version@_amd64.deb'
'https://github.com/sharkdp/bat/releases/download/v@version@/bat_@version@_amd64.deb'
'https://github.com/kubernetes-sigs/kind/releases/download/v@version@/kind-linux-amd64'
'https://github.com/kubernetes/minikube/releases/download/v@version@/minikube-linux-amd64'
'https://github.com/plantuml/plantuml/releases/download/v@version@/plantuml-@version@.jar'
'https://github.com/Versent/saml2aws/releases/download/v@version@/saml2aws_@version@_linux_amd64.tar.gz'

If you want to add a condition on architecture(linux, windows, x86, 64/32 bits):
"https://github.com/docker/compose/releases/download/v@version@/docker-compose-$(uname -s | tr '[:upper:]' '[:lower:]')-$(uname -m)"
"https://github.com/docker/docker-credential-helpers/releases/download/v@version@/docker-credential-wincred-v@version@.windows-$(dpkg --print-architecture).exe"
"https://github.com/Blacksmoke16/oq/releases/download/v@version@/oq-v@version@-$(uname -s)-$(uname -m)"

[1;37mCOMMAND EXAMPLES:[0m
Download docker-compose latest version
[2;97mupgradeGithubRelease /usr/local/bin/docker-compose "https://github.com/docker/compose/releases/download/v@version@/docker-compose-$(uname -s | tr '[:upper:]' '[:lower:]')-$(uname -m)"[0m

Download oq specific version
[2;97mupgradeGithubRelease /usr/local/bin/oq --exact-version 1.3.4 "https://github.com/Blacksmoke16/oq/releases/download/v@version@/oq-v@version@-$(uname -s)-$(uname -m)"[0m

Download oq specific version correctly retrieving the oq version and not the jq one
[2;97mupgradeGithubRelease /usr/local/bin/oq --exact-version 1.3.4 --version-arg '-V | grep oq:' "https://github.com/Blacksmoke16/oq/releases/download/v@version@/oq-v@version@-$(uname -s)-$(uname -m)"[0m

[1;37mVERSION: [0m2.0

[1;37mAUTHOR:[0m
[Fran√ßois Chastanet](https://github.com/fchastanet)

[1;37mSOURCE FILE:[0m
https://github.com/fchastanet/bash-tools/tree/master/src/_binaries/Git/upgradeGithubRelease.sh

[1;37mLICENSE:[0m
MIT License

Copyright (c) 2020-now Fran√ßois Chastanet
