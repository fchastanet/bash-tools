+ facade_main_d396e2bc1f6e43a7b79e8a25ad41ac25 --host localhost --port 888 --timeout 1 --algo timeoutV2WithTcp
++ cd /home/wsl/fchastanet/bash-tools/bin/..
++ pwd -P
+ BASH_TOOLS_ROOT_DIR=/home/wsl/fchastanet/bash-tools
+ [[ -d /home/wsl/fchastanet/bash-tools/vendor/bash-tools-framework/ ]]
++ cd /home/wsl/fchastanet/bash-tools/vendor/bash-tools-framework
++ pwd -P
+ FRAMEWORK_ROOT_DIR=/home/wsl/fchastanet/bash-dev-env/vendor/bash-tools-framework
+ FRAMEWORK_SRC_DIR=/home/wsl/fchastanet/bash-dev-env/vendor/bash-tools-framework/src
+ FRAMEWORK_BIN_DIR=/home/wsl/fchastanet/bash-dev-env/vendor/bash-tools-framework/bin
+ FRAMEWORK_VENDOR_DIR=/home/wsl/fchastanet/bash-dev-env/vendor/bash-tools-framework/vendor
+ FRAMEWORK_VENDOR_BIN_DIR=/home/wsl/fchastanet/bash-dev-env/vendor/bash-tools-framework/vendor/bin
+ [[ -f /home/wsl/.bash-tools/.env ]]
+ BASH_FRAMEWORK_ENV_FILES=("${HOME}/.bash-tools/.env")
+ export BASH_FRAMEWORK_ENV_FILES
+ Env::requireLoad
+ local configFilesStr
++ Env::getOrderedConfFiles
++ configFiles=()
++ local -a configFiles
++ [[ -n 1 ]]
++ configFiles+=("${BASH_FRAMEWORK_ENV_FILES[@]}")
++ local defaultEnvFile
+++ Env::createDefaultEnvFile
+++ local envFile
++++ Framework::createTempFile createDefaultEnvFileEnvFile
++++ mktemp -p /tmp/bash-framework/bash-framework-1781721-rBgQna -t createDefaultEnvFileEnvFile.XXXXXXXXXXXX
+++ envFile=/tmp/bash-framework/bash-framework-1781721-rBgQna/createDefaultEnvFileEnvFile.mjXFmo1Wm5qf
+++ echo BASH_FRAMEWORK_THEME=default
+++ echo BASH_FRAMEWORK_LOG_LEVEL=0
+++ echo BASH_FRAMEWORK_DISPLAY_LEVEL=2
+++ echo 'BASH_FRAMEWORK_LOG_FILE="${BASH_FRAMEWORK_LOG_FILE:-"${FRAMEWORK_ROOT_DIR}/logs/${SCRIPT_NAME}.log"}"'
+++ echo BASH_FRAMEWORK_LOG_FILE_MAX_ROTATION=5
+++ echo /tmp/bash-framework/bash-framework-1781721-rBgQna/createDefaultEnvFileEnvFile.mjXFmo1Wm5qf
++ defaultEnvFile=/tmp/bash-framework/bash-framework-1781721-rBgQna/createDefaultEnvFileEnvFile.mjXFmo1Wm5qf
++ configFiles+=("${defaultEnvFile}")
++ local file
++ for file in "${configFiles[@]}"
++ [[ ! -f /home/wsl/.bash-tools/.env ]]
++ [[ ! -r /home/wsl/.bash-tools/.env ]]
++ echo /home/wsl/.bash-tools/.env
++ for file in "${configFiles[@]}"
++ [[ ! -f /tmp/bash-framework/bash-framework-1781721-rBgQna/createDefaultEnvFileEnvFile.mjXFmo1Wm5qf ]]
++ [[ ! -r /tmp/bash-framework/bash-framework-1781721-rBgQna/createDefaultEnvFileEnvFile.mjXFmo1Wm5qf ]]
++ echo /tmp/bash-framework/bash-framework-1781721-rBgQna/createDefaultEnvFileEnvFile.mjXFmo1Wm5qf
+ configFilesStr='/home/wsl/.bash-tools/.env
/tmp/bash-framework/bash-framework-1781721-rBgQna/createDefaultEnvFileEnvFile.mjXFmo1Wm5qf'
+ local -a configFiles
+ readarray -t configFiles
+ (( 2 == 0 ))
+ [[ -z /home/wsl/.bash-tools/.env
/tmp/bash-framework/bash-framework-1781721-rBgQna/createDefaultEnvFileEnvFile.mjXFmo1Wm5qf ]]
+ Env::mergeConfFiles /home/wsl/.bash-tools/.env /tmp/bash-framework/bash-framework-1781721-rBgQna/createDefaultEnvFileEnvFile.mjXFmo1Wm5qf
+ configFileList=("$@")
+ local -a configFileList
+ (( 2 == 0 ))
+ local combinedConfigFile
++ Framework::createTempFile mergeConfFiles
++ mktemp -p /tmp/bash-framework/bash-framework-1781721-rBgQna -t mergeConfFiles.XXXXXXXXXXXX
+ combinedConfigFile=/tmp/bash-framework/bash-framework-1781721-rBgQna/mergeConfFiles.B27smZI9i3Hj
+ sed -E -e 's/\s*$// ; /^$/d ; /^#.*$/d ; s/=([^"'\''].*)$/="\1"/' /home/wsl/.bash-tools/.env /tmp/bash-framework/bash-framework-1781721-rBgQna/createDefaultEnvFileEnvFile.mjXFmo1Wm5qf
+ Filters::commentLines
+ grep -vxE '[[:blank:]]*(#.*)?'
+ awk -F= '!line[$1]++'
+ set -o allexport
+ source /tmp/bash-framework/bash-framework-1781721-rBgQna/mergeConfFiles.B27smZI9i3Hj
++ BASH_FRAMEWORK_LOG_LEVEL=0
++ BASH_FRAMEWORK_DISPLAY_LEVEL=3
++ BASH_FRAMEWORK_LOG_FILE=/home/wsl/.bash-tools/logs/bash.log
++ DB_IMPORT_DUMP_DIR=/home/wsl/.bash-tools/dbImportDumps
++ DB_IMPORT_GARBAGE_COLLECT_DAYS=+30
++ SCRIPTS_FOLDER=/home/wsl/.bash-tools/conf/dbScripts
++ BASH_TOOLS_FOLDER=/home/wsl/projects/bash-tools
++ S3_BASE_URL=s3://ck-dev-frsa-devsql/exports/
++ TEMP_FOLDER=/tmp
++ BASH_FRAMEWORK_THEME=default
++ BASH_FRAMEWORK_LOG_FILE_MAX_ROTATION=5
+ source /tmp/bash-framework/bash-framework-1781721-rBgQna/mergeConfFiles.B27smZI9i3Hj
++ BASH_FRAMEWORK_LOG_LEVEL=0
++ BASH_FRAMEWORK_DISPLAY_LEVEL=3
++ BASH_FRAMEWORK_LOG_FILE=/home/wsl/.bash-tools/logs/bash.log
++ DB_IMPORT_DUMP_DIR=/home/wsl/.bash-tools/dbImportDumps
++ DB_IMPORT_GARBAGE_COLLECT_DAYS=+30
++ SCRIPTS_FOLDER=/home/wsl/.bash-tools/conf/dbScripts
++ BASH_TOOLS_FOLDER=/home/wsl/projects/bash-tools
++ S3_BASE_URL=s3://ck-dev-frsa-devsql/exports/
++ TEMP_FOLDER=/tmp
++ BASH_FRAMEWORK_THEME=default
++ BASH_FRAMEWORK_LOG_FILE_MAX_ROTATION=5
+ set +o allexport
+ UI::requireTheme
+ UI::theme default
+ local theme=default
+ [[ ! default =~ -force$ ]]
+ Assert::tty
+ [[ 0 = \1 ]]
+ [[ 0 = \1 ]]
+ [[ -t 1 ]]
+ [[ -t 2 ]]
+ theme=noColor
+ case "${theme}" in
+ [[ noColor = \d\e\f\a\u\l\t ]]
+ export BASH_FRAMEWORK_THEME=noColor
+ BASH_FRAMEWORK_THEME=noColor
+ export __ERROR_COLOR=
+ __ERROR_COLOR=
+ export __INFO_COLOR=
+ __INFO_COLOR=
+ export __SUCCESS_COLOR=
+ __SUCCESS_COLOR=
+ export __WARNING_COLOR=
+ __WARNING_COLOR=
+ export __SKIPPED_COLOR=
+ __SKIPPED_COLOR=
+ export __DEBUG_COLOR=
+ __DEBUG_COLOR=
+ export __HELP_COLOR=
+ __HELP_COLOR=
+ export __TEST_COLOR=
+ __TEST_COLOR=
+ export __TEST_ERROR_COLOR=
+ __TEST_ERROR_COLOR=
+ export __HELP_TITLE_COLOR=
+ __HELP_TITLE_COLOR=
+ export __HELP_OPTION_COLOR=
+ __HELP_OPTION_COLOR=
+ export __RESET_COLOR=
+ __RESET_COLOR=
+ export __HELP_EXAMPLE=
+ __HELP_EXAMPLE=
+ export __HELP_TITLE=
+ __HELP_TITLE=
+ export __HELP_NORMAL=
+ __HELP_NORMAL=
+ Log::requireLoad
+ [[ -z /home/wsl/.bash-tools/logs/bash.log ]]
+ (( BASH_FRAMEWORK_LOG_LEVEL > __LEVEL_OFF ))
+ (( BASH_FRAMEWORK_LOG_LEVEL > __LEVEL_OFF ))
+ Compiler::Facade::requireCommandBinDir
+ COMMAND_BIN_DIR=/home/wsl/fchastanet/bash-tools/bin
+ Env::pathPrepend /home/wsl/fchastanet/bash-tools/bin
+ local arg
+ for arg in "$@"
+ [[ -d /home/wsl/fchastanet/bash-tools/bin ]]
+ [[ :/home/wsl/.virtualenv/python3.9/bin:/home/wsl/.bin:/home/wsl/.local/bin:/home/wsl/fchastanet/bash-tools/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/usr/lib/wsl/lib:/c/Python311/Scripts/:/c/Python311/:/c/Program Files/Common Files/Oracle/Java/javapath:/c/Program Files (x86)/Common Files/Oracle/Java/javapath:/c/PROGRA~1/AdoptOpenJDK/jdk-13.0.2.8-hotspot/bin:/c/Windows/system32:/c/Windows:/c/Windows/System32/Wbem:/c/Windows/System32/WindowsPowerShell/v1.0/:/c/Windows/System32/OpenSSH/:/c/PROGRA~1/WindowsPowerShell/Scripts:/c/PROGRA~1/IcedTeaWeb/WebStart/bin:/c/PROGRA~1/dotnet/:/c/PROGRA~2/WI3CF2~1/10/WINDOW~1:/c/PROGRA~2/Meld/:/c/WINDOWS/system32:/c/WINDOWS:/c/WINDOWS/System32/Wbem:/c/WINDOWS/System32/WindowsPowerShell/v1.0/:/c/WINDOWS/System32/OpenSSH/:/c/PROGRA~1/Git/cmd:/c/Program Files/dotnet/:/c/ProgramData/chocolatey/bin:/c/Program Files/PowerShell/7/:/c/Users/fchastanet/AppData/Local/Microsoft/WindowsApps:/c/PROGRA~1/JetBrains/PHPSTO~1.2/bin:/c/Users/fchastanet/AppData/Local/Programs/MICROS~1/bin:/c/Users/fchastanet/AppData/Local/JetBrains/Toolbox/scripts:/c/Users/fchastanet/.dotnet/tools:/c/Users/fchastanet/AppData/Local/Microsoft/WindowsApps:/c/Users/fchastanet/AppData/Local/Programs/Microsoft VS Code/bin:/c/WINDOWS/system32:/mnt/c/Windows:/c/Users/fchastanet/AppData/Local/Microsoft/WindowsApps:/mnt/c/WINDOWS/System32/WindowsPowerShell/v1.0/:/c/Users/fchastanet/AppData/Local/Programs/MICROS~1/bin:/usr/local/.composer/vendor/bin:/home/wsl/go/bin:/home/wsl/n/bin:/opt/kubectx:/home/wsl/.fzf/bin: != *\:\/\h\o\m\e\/\w\s\l\/\f\c\h\a\s\t\a\n\e\t\/\b\a\s\h\-\t\o\o\l\s\/\b\i\n\:* ]]
+ Linux::requireExecutedAsUser
++ id -u
+ [[ 1000 = \0 ]]
+ BASH_FRAMEWORK_ARGV_FILTERED=()
+ declare -a BASH_FRAMEWORK_ARGV_FILTERED
+ commandArgs=()
+ declare -a commandArgs
+ declare copyrightBeginYear=2020
+ declare optionTimeout=15
+ declare optionAlgo=
+ availableAlgos=(timeoutV1WithNc timeoutV2WithNc whileLoopWithNc timeoutV1WithTcp timeoutV2WithTcp whileLoopWithTcp)
+ declare -a availableAlgos
+ waitForItCommand parse --host localhost --port 888 --timeout 1 --algo timeoutV2WithTcp
+ local options_parse_cmd=parse
+ shift
+ [[ parse = \p\a\r\s\e ]]
+ local -i options_parse_optionParsedCountOptionHostOrIp
+ (( options_parse_optionParsedCountOptionHostOrIp = 0 ))
+ true
+ local -i options_parse_optionParsedCountOptionPort
+ (( options_parse_optionParsedCountOptionPort = 0 ))
+ true
+ local -i options_parse_optionParsedCountOptionAlgo
+ (( options_parse_optionParsedCountOptionAlgo = 0 ))
+ true
+ optionStrict=0
+ local -i options_parse_optionParsedCountOptionStrict
+ (( options_parse_optionParsedCountOptionStrict = 0 ))
+ true
+ optionTimeout=15
+ local -i options_parse_optionParsedCountOptionTimeout
+ (( options_parse_optionParsedCountOptionTimeout = 0 ))
+ true
+ local -i options_parse_optionParsedCountOptionBashFrameworkConfig
+ (( options_parse_optionParsedCountOptionBashFrameworkConfig = 0 ))
+ true
+ optionConfig=0
+ local -i options_parse_optionParsedCountOptionConfig
+ (( options_parse_optionParsedCountOptionConfig = 0 ))
+ true
+ optionInfoVerbose=0
+ local -i options_parse_optionParsedCountOptionInfoVerbose
+ (( options_parse_optionParsedCountOptionInfoVerbose = 0 ))
+ true
+ optionDebugVerbose=0
+ local -i options_parse_optionParsedCountOptionDebugVerbose
+ (( options_parse_optionParsedCountOptionDebugVerbose = 0 ))
+ true
+ optionTraceVerbose=0
+ local -i options_parse_optionParsedCountOptionTraceVerbose
+ (( options_parse_optionParsedCountOptionTraceVerbose = 0 ))
+ true
+ optionNoColor=0
+ local -i options_parse_optionParsedCountOptionNoColor
+ (( options_parse_optionParsedCountOptionNoColor = 0 ))
+ true
+ local -i options_parse_optionParsedCountOptionTheme
+ (( options_parse_optionParsedCountOptionTheme = 0 ))
+ true
+ optionHelp=0
+ local -i options_parse_optionParsedCountOptionHelp
+ (( options_parse_optionParsedCountOptionHelp = 0 ))
+ true
+ optionVersion=0
+ local -i options_parse_optionParsedCountOptionVersion
+ (( options_parse_optionParsedCountOptionVersion = 0 ))
+ true
+ optionQuiet=0
+ local -i options_parse_optionParsedCountOptionQuiet
+ (( options_parse_optionParsedCountOptionQuiet = 0 ))
+ true
+ local -i options_parse_optionParsedCountOptionLogLevel
+ (( options_parse_optionParsedCountOptionLogLevel = 0 ))
+ true
+ local -i options_parse_optionParsedCountOptionLogFile
+ (( options_parse_optionParsedCountOptionLogFile = 0 ))
+ true
+ local -i options_parse_optionParsedCountOptionDisplayLevel
+ (( options_parse_optionParsedCountOptionDisplayLevel = 0 ))
+ true
+ local -i options_parse_argParsedCountCommandArgs
+ (( options_parse_argParsedCountCommandArgs = 0 ))
+ true
+ local -i options_parse_parsedArgIndex=0
+ (( 8 > 0 ))
+ local options_parse_arg=--host
+ local argOptDefaultBehavior=0
+ case "${options_parse_arg}" in
+ shift
+ (( 7 == 0 ))
+ (( options_parse_optionParsedCountOptionHostOrIp >= 1 ))
+ (( ++options_parse_optionParsedCountOptionHostOrIp ))
+ optionHostOrIp=localhost
+ shift
+ (( 6 > 0 ))
+ local options_parse_arg=--port
+ local argOptDefaultBehavior=0
+ case "${options_parse_arg}" in
+ shift
+ (( 5 == 0 ))
+ (( options_parse_optionParsedCountOptionPort >= 1 ))
+ (( ++options_parse_optionParsedCountOptionPort ))
+ optionPort=888
+ optionPortCallback --port 888
+ [[ ! 888 =~ ^[0-9]+$ ]]
+ ((  optionPort == 0  ))
+ shift
+ (( 4 > 0 ))
+ local options_parse_arg=--timeout
+ local argOptDefaultBehavior=0
+ case "${options_parse_arg}" in
+ shift
+ (( 3 == 0 ))
+ (( options_parse_optionParsedCountOptionTimeout >= 1 ))
+ (( ++options_parse_optionParsedCountOptionTimeout ))
+ optionTimeout=1
+ optionTimeoutCallback --timeout 1
+ [[ ! 1 =~ ^[0-9]+$ ]]
+ shift
+ (( 2 > 0 ))
+ local options_parse_arg=--algo
+ local argOptDefaultBehavior=0
+ case "${options_parse_arg}" in
+ shift
+ (( 1 == 0 ))
+ (( options_parse_optionParsedCountOptionAlgo >= 1 ))
+ (( ++options_parse_optionParsedCountOptionAlgo ))
+ optionAlgo=timeoutV2WithTcp
+ optionAlgoCallback --algo timeoutV2WithTcp
+ Array::contains timeoutV2WithTcp timeoutV1WithNc timeoutV2WithNc whileLoopWithNc timeoutV1WithTcp timeoutV2WithTcp whileLoopWithTcp
+ local element
+ for element in "${@:2}"
+ [[ timeoutV1WithNc = \t\i\m\e\o\u\t\V\2\W\i\t\h\T\c\p ]]
+ for element in "${@:2}"
+ [[ timeoutV2WithNc = \t\i\m\e\o\u\t\V\2\W\i\t\h\T\c\p ]]
+ for element in "${@:2}"
+ [[ whileLoopWithNc = \t\i\m\e\o\u\t\V\2\W\i\t\h\T\c\p ]]
+ for element in "${@:2}"
+ [[ timeoutV1WithTcp = \t\i\m\e\o\u\t\V\2\W\i\t\h\T\c\p ]]
+ for element in "${@:2}"
+ [[ timeoutV2WithTcp = \t\i\m\e\o\u\t\V\2\W\i\t\h\T\c\p ]]
+ return 0
+ shift
+ (( 0 > 0 ))
+ (( options_parse_optionParsedCountOptionHostOrIp < 1 ))
+ (( options_parse_optionParsedCountOptionPort < 1 ))
+ commandOptionParseFinished
+ [[ -z 1 ]]
+ BASH_FRAMEWORK_ENV_FILES+=("${optionEnvFiles[@]}")
+ export BASH_FRAMEWORK_ENV_FILES
+ Env::requireLoad
+ local configFilesStr
++ Env::getOrderedConfFiles
++ configFiles=()
++ local -a configFiles
++ [[ -n 1 ]]
++ configFiles+=("${BASH_FRAMEWORK_ENV_FILES[@]}")
++ local defaultEnvFile
+++ Env::createDefaultEnvFile
+++ local envFile
++++ Framework::createTempFile createDefaultEnvFileEnvFile
++++ mktemp -p /tmp/bash-framework/bash-framework-1781721-rBgQna -t createDefaultEnvFileEnvFile.XXXXXXXXXXXX
+++ envFile=/tmp/bash-framework/bash-framework-1781721-rBgQna/createDefaultEnvFileEnvFile.YCaOFUSF4U8X
+++ echo BASH_FRAMEWORK_THEME=noColor
+++ echo BASH_FRAMEWORK_LOG_LEVEL=0
+++ echo BASH_FRAMEWORK_DISPLAY_LEVEL=3
+++ echo 'BASH_FRAMEWORK_LOG_FILE="${BASH_FRAMEWORK_LOG_FILE:-"${FRAMEWORK_ROOT_DIR}/logs/${SCRIPT_NAME}.log"}"'
+++ echo BASH_FRAMEWORK_LOG_FILE_MAX_ROTATION=5
+++ echo /tmp/bash-framework/bash-framework-1781721-rBgQna/createDefaultEnvFileEnvFile.YCaOFUSF4U8X
++ defaultEnvFile=/tmp/bash-framework/bash-framework-1781721-rBgQna/createDefaultEnvFileEnvFile.YCaOFUSF4U8X
++ configFiles+=("${defaultEnvFile}")
++ local file
++ for file in "${configFiles[@]}"
++ [[ ! -f /home/wsl/.bash-tools/.env ]]
++ [[ ! -r /home/wsl/.bash-tools/.env ]]
++ echo /home/wsl/.bash-tools/.env
++ for file in "${configFiles[@]}"
++ [[ ! -f /tmp/bash-framework/bash-framework-1781721-rBgQna/createDefaultEnvFileEnvFile.YCaOFUSF4U8X ]]
++ [[ ! -r /tmp/bash-framework/bash-framework-1781721-rBgQna/createDefaultEnvFileEnvFile.YCaOFUSF4U8X ]]
++ echo /tmp/bash-framework/bash-framework-1781721-rBgQna/createDefaultEnvFileEnvFile.YCaOFUSF4U8X
+ configFilesStr='/home/wsl/.bash-tools/.env
/tmp/bash-framework/bash-framework-1781721-rBgQna/createDefaultEnvFileEnvFile.YCaOFUSF4U8X'
+ local -a configFiles
+ readarray -t configFiles
+ (( 2 == 0 ))
+ [[ -z /home/wsl/.bash-tools/.env
/tmp/bash-framework/bash-framework-1781721-rBgQna/createDefaultEnvFileEnvFile.YCaOFUSF4U8X ]]
+ Env::mergeConfFiles /home/wsl/.bash-tools/.env /tmp/bash-framework/bash-framework-1781721-rBgQna/createDefaultEnvFileEnvFile.YCaOFUSF4U8X
+ configFileList=("$@")
+ local -a configFileList
+ (( 2 == 0 ))
+ local combinedConfigFile
++ Framework::createTempFile mergeConfFiles
++ mktemp -p /tmp/bash-framework/bash-framework-1781721-rBgQna -t mergeConfFiles.XXXXXXXXXXXX
+ combinedConfigFile=/tmp/bash-framework/bash-framework-1781721-rBgQna/mergeConfFiles.veDxMH82WHx7
+ sed -E -e 's/\s*$// ; /^$/d ; /^#.*$/d ; s/=([^"'\''].*)$/="\1"/' /home/wsl/.bash-tools/.env /tmp/bash-framework/bash-framework-1781721-rBgQna/createDefaultEnvFileEnvFile.YCaOFUSF4U8X
+ Filters::commentLines
+ grep -vxE '[[:blank:]]*(#.*)?'
+ awk -F= '!line[$1]++'
+ set -o allexport
+ source /tmp/bash-framework/bash-framework-1781721-rBgQna/mergeConfFiles.veDxMH82WHx7
++ BASH_FRAMEWORK_LOG_LEVEL=0
++ BASH_FRAMEWORK_DISPLAY_LEVEL=3
++ BASH_FRAMEWORK_LOG_FILE=/home/wsl/.bash-tools/logs/bash.log
++ DB_IMPORT_DUMP_DIR=/home/wsl/.bash-tools/dbImportDumps
++ DB_IMPORT_GARBAGE_COLLECT_DAYS=+30
++ SCRIPTS_FOLDER=/home/wsl/.bash-tools/conf/dbScripts
++ BASH_TOOLS_FOLDER=/home/wsl/projects/bash-tools
++ S3_BASE_URL=s3://ck-dev-frsa-devsql/exports/
++ TEMP_FOLDER=/tmp
++ BASH_FRAMEWORK_THEME=noColor
++ BASH_FRAMEWORK_LOG_FILE_MAX_ROTATION=5
+ source /tmp/bash-framework/bash-framework-1781721-rBgQna/mergeConfFiles.veDxMH82WHx7
++ BASH_FRAMEWORK_LOG_LEVEL=0
++ BASH_FRAMEWORK_DISPLAY_LEVEL=3
++ BASH_FRAMEWORK_LOG_FILE=/home/wsl/.bash-tools/logs/bash.log
++ DB_IMPORT_DUMP_DIR=/home/wsl/.bash-tools/dbImportDumps
++ DB_IMPORT_GARBAGE_COLLECT_DAYS=+30
++ SCRIPTS_FOLDER=/home/wsl/.bash-tools/conf/dbScripts
++ BASH_TOOLS_FOLDER=/home/wsl/projects/bash-tools
++ S3_BASE_URL=s3://ck-dev-frsa-devsql/exports/
++ TEMP_FOLDER=/tmp
++ BASH_FRAMEWORK_THEME=noColor
++ BASH_FRAMEWORK_LOG_FILE_MAX_ROTATION=5
+ set +o allexport
+ Log::requireLoad
+ [[ -z /home/wsl/.bash-tools/logs/bash.log ]]
+ (( BASH_FRAMEWORK_LOG_LEVEL > __LEVEL_OFF ))
+ (( BASH_FRAMEWORK_LOG_LEVEL > __LEVEL_OFF ))
+ [[ -n '' ]]
+ BASH_FRAMEWORK_CONFIG_FILE=
+ Framework::loadConfig BASH_FRAMEWORK_CONFIG_FILE /home/wsl/fchastanet/bash-dev-env/vendor/bash-tools-framework
+ local -n loadConfig_loadedConfigFile=BASH_FRAMEWORK_CONFIG_FILE
+ shift
+ Conf::loadNearestFile .framework-config loadConfig_loadedConfigFile /home/wsl/fchastanet/bash-dev-env/vendor/bash-tools-framework
+ local configFileName=.framework-config
+ local -n loadedFile=loadConfig_loadedConfigFile
+ shift 2
+ srcDirs=("$@")
+ local -a srcDirs
+ for srcDir in "${srcDirs[@]}"
++ File::upFind /home/wsl/fchastanet/bash-dev-env/vendor/bash-tools-framework .framework-config
++ local fromPath=/home/wsl/fchastanet/bash-dev-env/vendor/bash-tools-framework
++ shift
++ local fileName=.framework-config
++ shift
++ local untilInclusivePath=/
++ shift
++ true
++ [[ -f /home/wsl/fchastanet/bash-dev-env/vendor/bash-tools-framework ]]
++ true
++ [[ -f /home/wsl/fchastanet/bash-dev-env/vendor/bash-tools-framework/.framework-config ]]
++ echo /home/wsl/fchastanet/bash-dev-env/vendor/bash-tools-framework/.framework-config
++ return 0
+ configFile=/home/wsl/fchastanet/bash-dev-env/vendor/bash-tools-framework/.framework-config
+ [[ -n /home/wsl/fchastanet/bash-dev-env/vendor/bash-tools-framework/.framework-config ]]
+ source /home/wsl/fchastanet/bash-dev-env/vendor/bash-tools-framework/.framework-config
++ FRAMEWORK_FUNCTIONS_IGNORE_REGEXP='^(Namespace::functions|Functions::myFunction|Namespace::requireSomething|IMPORT::dir::file|Acquire::ForceIPv4)$'
++ NON_FRAMEWORK_FILES_REGEXP='(^bin/|.framework-config|.bats$|/testsData/|^manualTests/|/_.sh$|/ZZZ.sh$|/__all.sh$|^src/_binaries|^src/_includes|^src/batsHeaders.sh$|^src/_standalone)'
++ BATS_FILE_NOT_NEEDED_REGEXP='(^bin/|.framework-config|.bats$|/testsData/|^manualTests/|/_.sh$|/ZZZ.sh$|/__all.sh$|^src/batsHeaders.sh$|^src/_includes)'
++ FRAMEWORK_FILES_FUNCTION_MATCHING_IGNORE_REGEXP='^bin/|^\.framework-config$|^build.sh$|\.tpl$|/testsData/|^manualTests/|\.bats$'
++ FRAMEWORK_SRC_DIRS=("${FRAMEWORK_ROOT_DIR}/src")
++ export REPOSITORY_URL=https://github.com/fchastanet/bash-tools-framework
++ REPOSITORY_URL=https://github.com/fchastanet/bash-tools-framework
+ Log::displayDebug 'Config file /home/wsl/fchastanet/bash-dev-env/vendor/bash-tools-framework/.framework-config is loaded'
+ (( BASH_FRAMEWORK_DISPLAY_LEVEL >= __LEVEL_DEBUG ))
+ Log::logDebug 'Config file /home/wsl/fchastanet/bash-dev-env/vendor/bash-tools-framework/.framework-config is loaded'
+ (( BASH_FRAMEWORK_LOG_LEVEL >= __LEVEL_DEBUG ))
+ loadedFile=/home/wsl/fchastanet/bash-dev-env/vendor/bash-tools-framework/.framework-config
+ return 0
+ [[ 0 = \1 ]]
+ commandCallback
+ [[ localhost = '' ]]
+ [[ 888 = '' ]]
+ Log::displayDebug 'Command waitForIt - parse arguments: --host localhost --port 888 --timeout 1 --algo timeoutV2WithTcp'
+ (( BASH_FRAMEWORK_DISPLAY_LEVEL >= __LEVEL_DEBUG ))
+ Log::logDebug 'Command waitForIt - parse arguments: --host localhost --port 888 --timeout 1 --algo timeoutV2WithTcp'
+ (( BASH_FRAMEWORK_LOG_LEVEL >= __LEVEL_DEBUG ))
+ Log::displayDebug 'Command waitForIt - parse filtered arguments: '
+ (( BASH_FRAMEWORK_DISPLAY_LEVEL >= __LEVEL_DEBUG ))
+ Log::logDebug 'Command waitForIt - parse filtered arguments: '
+ (( BASH_FRAMEWORK_LOG_LEVEL >= __LEVEL_DEBUG ))
+ [[ 0 = \1 ]]
+ run
+ local result=0
+ [[ -n '' ]]
+ local algo=timeoutV2WithTcp
+ [[ -z timeoutV2WithTcp ]]
+ Log::displayInfo 'waitForIt - using algorithm timeoutV2WithTcp'
+ local type=INFO
+ (( BASH_FRAMEWORK_DISPLAY_LEVEL >= __LEVEL_INFO ))
+ echo -e 'INFO    - waitForIt - using algorithm timeoutV2WithTcp'
INFO    - waitForIt - using algorithm timeoutV2WithTcp
+ Log::logInfo 'waitForIt - using algorithm timeoutV2WithTcp' INFO
+ (( BASH_FRAMEWORK_LOG_LEVEL >= __LEVEL_INFO ))
+ (( optionTimeout > 0 ))
+ Log::displayInfo 'waitForIt - waiting 1 seconds for localhost:888'
+ local type=INFO
+ (( BASH_FRAMEWORK_DISPLAY_LEVEL >= __LEVEL_INFO ))
+ echo -e 'INFO    - waitForIt - waiting 1 seconds for localhost:888'
INFO    - waitForIt - waiting 1 seconds for localhost:888
+ Log::logInfo 'waitForIt - waiting 1 seconds for localhost:888' INFO
+ (( BASH_FRAMEWORK_LOG_LEVEL >= __LEVEL_INFO ))
+ timeoutV2WithTcp
+ timeoutCommand v2 usingTcp
+ local timeoutVersion=v2
+ local commandToUse=usingTcp
+ local result
+ local -i start_ts=0
+ Array::contains usingTcp usingTcp usingNc
+ local element
+ for element in "${@:2}"
+ [[ usingTcp = \u\s\i\n\g\T\c\p ]]
+ return 0
+ timeoutCmd=(timeout)
+ local -a timeoutCmd
+ [[ v2 = \v\1 ]]
+ timeoutCmd+=("${optionTimeout}" "$0" "${ORIGINAL_BASH_FRAMEWORK_ARGV[@]}")
+ local pid=1781756
+ WAIT_FOR_IT_TIMEOUT_CHILD_ALGO=usingTcp
+ trap 'kill -INT -1781756' INT
+ timeout 1 bin/waitForIt --host localhost --port 888 --timeout 1 --algo timeoutV2WithTcp
+ wait 1781756
+ facade_main_d396e2bc1f6e43a7b79e8a25ad41ac25 --host localhost --port 888 --timeout 1 --algo timeoutV2WithTcp
++ cd /home/wsl/fchastanet/bash-tools/bin/..
++ pwd -P
+ BASH_TOOLS_ROOT_DIR=/home/wsl/fchastanet/bash-tools
+ [[ -d /home/wsl/fchastanet/bash-tools/vendor/bash-tools-framework/ ]]
++ cd /home/wsl/fchastanet/bash-tools/vendor/bash-tools-framework
++ pwd -P
+ FRAMEWORK_ROOT_DIR=/home/wsl/fchastanet/bash-dev-env/vendor/bash-tools-framework
+ FRAMEWORK_SRC_DIR=/home/wsl/fchastanet/bash-dev-env/vendor/bash-tools-framework/src
+ FRAMEWORK_BIN_DIR=/home/wsl/fchastanet/bash-dev-env/vendor/bash-tools-framework/bin
+ FRAMEWORK_VENDOR_DIR=/home/wsl/fchastanet/bash-dev-env/vendor/bash-tools-framework/vendor
+ FRAMEWORK_VENDOR_BIN_DIR=/home/wsl/fchastanet/bash-dev-env/vendor/bash-tools-framework/vendor/bin
+ [[ -f /home/wsl/.bash-tools/.env ]]
+ BASH_FRAMEWORK_ENV_FILES=("${HOME}/.bash-tools/.env")
+ export BASH_FRAMEWORK_ENV_FILES
+ Env::requireLoad
+ local configFilesStr
++ Env::getOrderedConfFiles
++ configFiles=()
++ local -a configFiles
++ [[ -n 1 ]]
++ configFiles+=("${BASH_FRAMEWORK_ENV_FILES[@]}")
++ local defaultEnvFile
+++ Env::createDefaultEnvFile
+++ local envFile
++++ Framework::createTempFile createDefaultEnvFileEnvFile
++++ mktemp -p /tmp/bash-framework/bash-framework-1781721-rBgQna/bash-framework-1781757-68jUsE -t createDefaultEnvFileEnvFile.XXXXXXXXXXXX
+++ envFile=/tmp/bash-framework/bash-framework-1781721-rBgQna/bash-framework-1781757-68jUsE/createDefaultEnvFileEnvFile.6GYY1uLmH8qq
+++ echo BASH_FRAMEWORK_THEME=noColor
+++ echo BASH_FRAMEWORK_LOG_LEVEL=0
+++ echo BASH_FRAMEWORK_DISPLAY_LEVEL=3
+++ echo 'BASH_FRAMEWORK_LOG_FILE="${BASH_FRAMEWORK_LOG_FILE:-"${FRAMEWORK_ROOT_DIR}/logs/${SCRIPT_NAME}.log"}"'
+++ echo BASH_FRAMEWORK_LOG_FILE_MAX_ROTATION=5
+++ echo /tmp/bash-framework/bash-framework-1781721-rBgQna/bash-framework-1781757-68jUsE/createDefaultEnvFileEnvFile.6GYY1uLmH8qq
++ defaultEnvFile=/tmp/bash-framework/bash-framework-1781721-rBgQna/bash-framework-1781757-68jUsE/createDefaultEnvFileEnvFile.6GYY1uLmH8qq
++ configFiles+=("${defaultEnvFile}")
++ local file
++ for file in "${configFiles[@]}"
++ [[ ! -f /home/wsl/.bash-tools/.env ]]
++ [[ ! -r /home/wsl/.bash-tools/.env ]]
++ echo /home/wsl/.bash-tools/.env
++ for file in "${configFiles[@]}"
++ [[ ! -f /tmp/bash-framework/bash-framework-1781721-rBgQna/bash-framework-1781757-68jUsE/createDefaultEnvFileEnvFile.6GYY1uLmH8qq ]]
++ [[ ! -r /tmp/bash-framework/bash-framework-1781721-rBgQna/bash-framework-1781757-68jUsE/createDefaultEnvFileEnvFile.6GYY1uLmH8qq ]]
++ echo /tmp/bash-framework/bash-framework-1781721-rBgQna/bash-framework-1781757-68jUsE/createDefaultEnvFileEnvFile.6GYY1uLmH8qq
+ configFilesStr='/home/wsl/.bash-tools/.env
/tmp/bash-framework/bash-framework-1781721-rBgQna/bash-framework-1781757-68jUsE/createDefaultEnvFileEnvFile.6GYY1uLmH8qq'
+ local -a configFiles
+ readarray -t configFiles
+ (( 2 == 0 ))
+ [[ -z /home/wsl/.bash-tools/.env
/tmp/bash-framework/bash-framework-1781721-rBgQna/bash-framework-1781757-68jUsE/createDefaultEnvFileEnvFile.6GYY1uLmH8qq ]]
+ Env::mergeConfFiles /home/wsl/.bash-tools/.env /tmp/bash-framework/bash-framework-1781721-rBgQna/bash-framework-1781757-68jUsE/createDefaultEnvFileEnvFile.6GYY1uLmH8qq
+ configFileList=("$@")
+ local -a configFileList
+ (( 2 == 0 ))
+ local combinedConfigFile
++ Framework::createTempFile mergeConfFiles
++ mktemp -p /tmp/bash-framework/bash-framework-1781721-rBgQna/bash-framework-1781757-68jUsE -t mergeConfFiles.XXXXXXXXXXXX
+ combinedConfigFile=/tmp/bash-framework/bash-framework-1781721-rBgQna/bash-framework-1781757-68jUsE/mergeConfFiles.qmGWA7wQgTpH
+ sed -E -e 's/\s*$// ; /^$/d ; /^#.*$/d ; s/=([^"'\''].*)$/="\1"/' /home/wsl/.bash-tools/.env /tmp/bash-framework/bash-framework-1781721-rBgQna/bash-framework-1781757-68jUsE/createDefaultEnvFileEnvFile.6GYY1uLmH8qq
+ Filters::commentLines
+ grep -vxE '[[:blank:]]*(#.*)?'
+ awk -F= '!line[$1]++'
+ set -o allexport
+ source /tmp/bash-framework/bash-framework-1781721-rBgQna/bash-framework-1781757-68jUsE/mergeConfFiles.qmGWA7wQgTpH
++ BASH_FRAMEWORK_LOG_LEVEL=0
++ BASH_FRAMEWORK_DISPLAY_LEVEL=3
++ BASH_FRAMEWORK_LOG_FILE=/home/wsl/.bash-tools/logs/bash.log
++ DB_IMPORT_DUMP_DIR=/home/wsl/.bash-tools/dbImportDumps
++ DB_IMPORT_GARBAGE_COLLECT_DAYS=+30
++ SCRIPTS_FOLDER=/home/wsl/.bash-tools/conf/dbScripts
++ BASH_TOOLS_FOLDER=/home/wsl/projects/bash-tools
++ S3_BASE_URL=s3://ck-dev-frsa-devsql/exports/
++ TEMP_FOLDER=/tmp
++ BASH_FRAMEWORK_THEME=noColor
++ BASH_FRAMEWORK_LOG_FILE_MAX_ROTATION=5
+ source /tmp/bash-framework/bash-framework-1781721-rBgQna/bash-framework-1781757-68jUsE/mergeConfFiles.qmGWA7wQgTpH
++ BASH_FRAMEWORK_LOG_LEVEL=0
++ BASH_FRAMEWORK_DISPLAY_LEVEL=3
++ BASH_FRAMEWORK_LOG_FILE=/home/wsl/.bash-tools/logs/bash.log
++ DB_IMPORT_DUMP_DIR=/home/wsl/.bash-tools/dbImportDumps
++ DB_IMPORT_GARBAGE_COLLECT_DAYS=+30
++ SCRIPTS_FOLDER=/home/wsl/.bash-tools/conf/dbScripts
++ BASH_TOOLS_FOLDER=/home/wsl/projects/bash-tools
++ S3_BASE_URL=s3://ck-dev-frsa-devsql/exports/
++ TEMP_FOLDER=/tmp
++ BASH_FRAMEWORK_THEME=noColor
++ BASH_FRAMEWORK_LOG_FILE_MAX_ROTATION=5
+ set +o allexport
+ UI::requireTheme
+ UI::theme noColor
+ local theme=noColor
+ [[ ! noColor =~ -force$ ]]
+ Assert::tty
+ [[ 0 = \1 ]]
+ [[ 0 = \1 ]]
+ [[ -t 1 ]]
+ [[ -t 2 ]]
+ theme=noColor
+ case "${theme}" in
+ [[ noColor = \d\e\f\a\u\l\t ]]
+ export BASH_FRAMEWORK_THEME=noColor
+ BASH_FRAMEWORK_THEME=noColor
+ export __ERROR_COLOR=
+ __ERROR_COLOR=
+ export __INFO_COLOR=
+ __INFO_COLOR=
+ export __SUCCESS_COLOR=
+ __SUCCESS_COLOR=
+ export __WARNING_COLOR=
+ __WARNING_COLOR=
+ export __SKIPPED_COLOR=
+ __SKIPPED_COLOR=
+ export __DEBUG_COLOR=
+ __DEBUG_COLOR=
+ export __HELP_COLOR=
+ __HELP_COLOR=
+ export __TEST_COLOR=
+ __TEST_COLOR=
+ export __TEST_ERROR_COLOR=
+ __TEST_ERROR_COLOR=
+ export __HELP_TITLE_COLOR=
+ __HELP_TITLE_COLOR=
+ export __HELP_OPTION_COLOR=
+ __HELP_OPTION_COLOR=
+ export __RESET_COLOR=
+ __RESET_COLOR=
+ export __HELP_EXAMPLE=
+ __HELP_EXAMPLE=
+ export __HELP_TITLE=
+ __HELP_TITLE=
+ export __HELP_NORMAL=
+ __HELP_NORMAL=
+ Log::requireLoad
+ [[ -z /home/wsl/.bash-tools/logs/bash.log ]]
+ (( BASH_FRAMEWORK_LOG_LEVEL > __LEVEL_OFF ))
+ (( BASH_FRAMEWORK_LOG_LEVEL > __LEVEL_OFF ))
+ Compiler::Facade::requireCommandBinDir
+ COMMAND_BIN_DIR=/home/wsl/fchastanet/bash-tools/bin
+ Env::pathPrepend /home/wsl/fchastanet/bash-tools/bin
+ local arg
+ for arg in "$@"
+ [[ -d /home/wsl/fchastanet/bash-tools/bin ]]
+ [[ :/home/wsl/.virtualenv/python3.9/bin:/home/wsl/.bin:/home/wsl/.local/bin:/home/wsl/fchastanet/bash-tools/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/usr/lib/wsl/lib:/c/Python311/Scripts/:/c/Python311/:/c/Program Files/Common Files/Oracle/Java/javapath:/c/Program Files (x86)/Common Files/Oracle/Java/javapath:/c/PROGRA~1/AdoptOpenJDK/jdk-13.0.2.8-hotspot/bin:/c/Windows/system32:/c/Windows:/c/Windows/System32/Wbem:/c/Windows/System32/WindowsPowerShell/v1.0/:/c/Windows/System32/OpenSSH/:/c/PROGRA~1/WindowsPowerShell/Scripts:/c/PROGRA~1/IcedTeaWeb/WebStart/bin:/c/PROGRA~1/dotnet/:/c/PROGRA~2/WI3CF2~1/10/WINDOW~1:/c/PROGRA~2/Meld/:/c/WINDOWS/system32:/c/WINDOWS:/c/WINDOWS/System32/Wbem:/c/WINDOWS/System32/WindowsPowerShell/v1.0/:/c/WINDOWS/System32/OpenSSH/:/c/PROGRA~1/Git/cmd:/c/Program Files/dotnet/:/c/ProgramData/chocolatey/bin:/c/Program Files/PowerShell/7/:/c/Users/fchastanet/AppData/Local/Microsoft/WindowsApps:/c/PROGRA~1/JetBrains/PHPSTO~1.2/bin:/c/Users/fchastanet/AppData/Local/Programs/MICROS~1/bin:/c/Users/fchastanet/AppData/Local/JetBrains/Toolbox/scripts:/c/Users/fchastanet/.dotnet/tools:/c/Users/fchastanet/AppData/Local/Microsoft/WindowsApps:/c/Users/fchastanet/AppData/Local/Programs/Microsoft VS Code/bin:/c/WINDOWS/system32:/mnt/c/Windows:/c/Users/fchastanet/AppData/Local/Microsoft/WindowsApps:/mnt/c/WINDOWS/System32/WindowsPowerShell/v1.0/:/c/Users/fchastanet/AppData/Local/Programs/MICROS~1/bin:/usr/local/.composer/vendor/bin:/home/wsl/go/bin:/home/wsl/n/bin:/opt/kubectx:/home/wsl/.fzf/bin: != *\:\/\h\o\m\e\/\w\s\l\/\f\c\h\a\s\t\a\n\e\t\/\b\a\s\h\-\t\o\o\l\s\/\b\i\n\:* ]]
+ Linux::requireExecutedAsUser
++ id -u
+ [[ 1000 = \0 ]]
+ BASH_FRAMEWORK_ARGV_FILTERED=()
+ declare -a BASH_FRAMEWORK_ARGV_FILTERED
+ commandArgs=()
+ declare -a commandArgs
+ declare copyrightBeginYear=2020
+ declare optionTimeout=15
+ declare optionAlgo=
+ availableAlgos=(timeoutV1WithNc timeoutV2WithNc whileLoopWithNc timeoutV1WithTcp timeoutV2WithTcp whileLoopWithTcp)
+ declare -a availableAlgos
+ waitForItCommand parse --host localhost --port 888 --timeout 1 --algo timeoutV2WithTcp
+ local options_parse_cmd=parse
+ shift
+ [[ parse = \p\a\r\s\e ]]
+ local -i options_parse_optionParsedCountOptionHostOrIp
+ (( options_parse_optionParsedCountOptionHostOrIp = 0 ))
+ true
+ local -i options_parse_optionParsedCountOptionPort
+ (( options_parse_optionParsedCountOptionPort = 0 ))
+ true
+ local -i options_parse_optionParsedCountOptionAlgo
+ (( options_parse_optionParsedCountOptionAlgo = 0 ))
+ true
+ optionStrict=0
+ local -i options_parse_optionParsedCountOptionStrict
+ (( options_parse_optionParsedCountOptionStrict = 0 ))
+ true
+ optionTimeout=15
+ local -i options_parse_optionParsedCountOptionTimeout
+ (( options_parse_optionParsedCountOptionTimeout = 0 ))
+ true
+ local -i options_parse_optionParsedCountOptionBashFrameworkConfig
+ (( options_parse_optionParsedCountOptionBashFrameworkConfig = 0 ))
+ true
+ optionConfig=0
+ local -i options_parse_optionParsedCountOptionConfig
+ (( options_parse_optionParsedCountOptionConfig = 0 ))
+ true
+ optionInfoVerbose=0
+ local -i options_parse_optionParsedCountOptionInfoVerbose
+ (( options_parse_optionParsedCountOptionInfoVerbose = 0 ))
+ true
+ optionDebugVerbose=0
+ local -i options_parse_optionParsedCountOptionDebugVerbose
+ (( options_parse_optionParsedCountOptionDebugVerbose = 0 ))
+ true
+ optionTraceVerbose=0
+ local -i options_parse_optionParsedCountOptionTraceVerbose
+ (( options_parse_optionParsedCountOptionTraceVerbose = 0 ))
+ true
+ optionNoColor=0
+ local -i options_parse_optionParsedCountOptionNoColor
+ (( options_parse_optionParsedCountOptionNoColor = 0 ))
+ true
+ local -i options_parse_optionParsedCountOptionTheme
+ (( options_parse_optionParsedCountOptionTheme = 0 ))
+ true
+ optionHelp=0
+ local -i options_parse_optionParsedCountOptionHelp
+ (( options_parse_optionParsedCountOptionHelp = 0 ))
+ true
+ optionVersion=0
+ local -i options_parse_optionParsedCountOptionVersion
+ (( options_parse_optionParsedCountOptionVersion = 0 ))
+ true
+ optionQuiet=0
+ local -i options_parse_optionParsedCountOptionQuiet
+ (( options_parse_optionParsedCountOptionQuiet = 0 ))
+ true
+ local -i options_parse_optionParsedCountOptionLogLevel
+ (( options_parse_optionParsedCountOptionLogLevel = 0 ))
+ true
+ local -i options_parse_optionParsedCountOptionLogFile
+ (( options_parse_optionParsedCountOptionLogFile = 0 ))
+ true
+ local -i options_parse_optionParsedCountOptionDisplayLevel
+ (( options_parse_optionParsedCountOptionDisplayLevel = 0 ))
+ true
+ local -i options_parse_argParsedCountCommandArgs
+ (( options_parse_argParsedCountCommandArgs = 0 ))
+ true
+ local -i options_parse_parsedArgIndex=0
+ (( 8 > 0 ))
+ local options_parse_arg=--host
+ local argOptDefaultBehavior=0
+ case "${options_parse_arg}" in
+ shift
+ (( 7 == 0 ))
+ (( options_parse_optionParsedCountOptionHostOrIp >= 1 ))
+ (( ++options_parse_optionParsedCountOptionHostOrIp ))
+ optionHostOrIp=localhost
+ shift
+ (( 6 > 0 ))
+ local options_parse_arg=--port
+ local argOptDefaultBehavior=0
+ case "${options_parse_arg}" in
+ shift
+ (( 5 == 0 ))
+ (( options_parse_optionParsedCountOptionPort >= 1 ))
+ (( ++options_parse_optionParsedCountOptionPort ))
+ optionPort=888
+ optionPortCallback --port 888
+ [[ ! 888 =~ ^[0-9]+$ ]]
+ ((  optionPort == 0  ))
+ shift
+ (( 4 > 0 ))
+ local options_parse_arg=--timeout
+ local argOptDefaultBehavior=0
+ case "${options_parse_arg}" in
+ shift
+ (( 3 == 0 ))
+ (( options_parse_optionParsedCountOptionTimeout >= 1 ))
+ (( ++options_parse_optionParsedCountOptionTimeout ))
+ optionTimeout=1
+ optionTimeoutCallback --timeout 1
+ [[ ! 1 =~ ^[0-9]+$ ]]
+ shift
+ (( 2 > 0 ))
+ local options_parse_arg=--algo
+ local argOptDefaultBehavior=0
+ case "${options_parse_arg}" in
+ shift
+ (( 1 == 0 ))
+ (( options_parse_optionParsedCountOptionAlgo >= 1 ))
+ (( ++options_parse_optionParsedCountOptionAlgo ))
+ optionAlgo=timeoutV2WithTcp
+ optionAlgoCallback --algo timeoutV2WithTcp
+ Array::contains timeoutV2WithTcp timeoutV1WithNc timeoutV2WithNc whileLoopWithNc timeoutV1WithTcp timeoutV2WithTcp whileLoopWithTcp
+ local element
+ for element in "${@:2}"
+ [[ timeoutV1WithNc = \t\i\m\e\o\u\t\V\2\W\i\t\h\T\c\p ]]
+ for element in "${@:2}"
+ [[ timeoutV2WithNc = \t\i\m\e\o\u\t\V\2\W\i\t\h\T\c\p ]]
+ for element in "${@:2}"
+ [[ whileLoopWithNc = \t\i\m\e\o\u\t\V\2\W\i\t\h\T\c\p ]]
+ for element in "${@:2}"
+ [[ timeoutV1WithTcp = \t\i\m\e\o\u\t\V\2\W\i\t\h\T\c\p ]]
+ for element in "${@:2}"
+ [[ timeoutV2WithTcp = \t\i\m\e\o\u\t\V\2\W\i\t\h\T\c\p ]]
+ return 0
+ shift
+ (( 0 > 0 ))
+ (( options_parse_optionParsedCountOptionHostOrIp < 1 ))
+ (( options_parse_optionParsedCountOptionPort < 1 ))
+ commandOptionParseFinished
+ [[ -z 1 ]]
+ BASH_FRAMEWORK_ENV_FILES+=("${optionEnvFiles[@]}")
+ export BASH_FRAMEWORK_ENV_FILES
+ Env::requireLoad
+ local configFilesStr
++ Env::getOrderedConfFiles
++ configFiles=()
++ local -a configFiles
++ [[ -n 1 ]]
++ configFiles+=("${BASH_FRAMEWORK_ENV_FILES[@]}")
++ local defaultEnvFile
+++ Env::createDefaultEnvFile
+++ local envFile
++++ Framework::createTempFile createDefaultEnvFileEnvFile
++++ mktemp -p /tmp/bash-framework/bash-framework-1781721-rBgQna/bash-framework-1781757-68jUsE -t createDefaultEnvFileEnvFile.XXXXXXXXXXXX
+++ envFile=/tmp/bash-framework/bash-framework-1781721-rBgQna/bash-framework-1781757-68jUsE/createDefaultEnvFileEnvFile.g0TBpne4LK88
+++ echo BASH_FRAMEWORK_THEME=noColor
+++ echo BASH_FRAMEWORK_LOG_LEVEL=0
+++ echo BASH_FRAMEWORK_DISPLAY_LEVEL=3
+++ echo 'BASH_FRAMEWORK_LOG_FILE="${BASH_FRAMEWORK_LOG_FILE:-"${FRAMEWORK_ROOT_DIR}/logs/${SCRIPT_NAME}.log"}"'
+++ echo BASH_FRAMEWORK_LOG_FILE_MAX_ROTATION=5
+++ echo /tmp/bash-framework/bash-framework-1781721-rBgQna/bash-framework-1781757-68jUsE/createDefaultEnvFileEnvFile.g0TBpne4LK88
++ defaultEnvFile=/tmp/bash-framework/bash-framework-1781721-rBgQna/bash-framework-1781757-68jUsE/createDefaultEnvFileEnvFile.g0TBpne4LK88
++ configFiles+=("${defaultEnvFile}")
++ local file
++ for file in "${configFiles[@]}"
++ [[ ! -f /home/wsl/.bash-tools/.env ]]
++ [[ ! -r /home/wsl/.bash-tools/.env ]]
++ echo /home/wsl/.bash-tools/.env
++ for file in "${configFiles[@]}"
++ [[ ! -f /tmp/bash-framework/bash-framework-1781721-rBgQna/bash-framework-1781757-68jUsE/createDefaultEnvFileEnvFile.g0TBpne4LK88 ]]
++ [[ ! -r /tmp/bash-framework/bash-framework-1781721-rBgQna/bash-framework-1781757-68jUsE/createDefaultEnvFileEnvFile.g0TBpne4LK88 ]]
++ echo /tmp/bash-framework/bash-framework-1781721-rBgQna/bash-framework-1781757-68jUsE/createDefaultEnvFileEnvFile.g0TBpne4LK88
+ configFilesStr='/home/wsl/.bash-tools/.env
/tmp/bash-framework/bash-framework-1781721-rBgQna/bash-framework-1781757-68jUsE/createDefaultEnvFileEnvFile.g0TBpne4LK88'
+ local -a configFiles
+ readarray -t configFiles
+ (( 2 == 0 ))
+ [[ -z /home/wsl/.bash-tools/.env
/tmp/bash-framework/bash-framework-1781721-rBgQna/bash-framework-1781757-68jUsE/createDefaultEnvFileEnvFile.g0TBpne4LK88 ]]
+ Env::mergeConfFiles /home/wsl/.bash-tools/.env /tmp/bash-framework/bash-framework-1781721-rBgQna/bash-framework-1781757-68jUsE/createDefaultEnvFileEnvFile.g0TBpne4LK88
+ configFileList=("$@")
+ local -a configFileList
+ (( 2 == 0 ))
+ local combinedConfigFile
++ Framework::createTempFile mergeConfFiles
++ mktemp -p /tmp/bash-framework/bash-framework-1781721-rBgQna/bash-framework-1781757-68jUsE -t mergeConfFiles.XXXXXXXXXXXX
+ combinedConfigFile=/tmp/bash-framework/bash-framework-1781721-rBgQna/bash-framework-1781757-68jUsE/mergeConfFiles.VYUdfc7MtOyE
+ sed -E -e 's/\s*$// ; /^$/d ; /^#.*$/d ; s/=([^"'\''].*)$/="\1"/' /home/wsl/.bash-tools/.env /tmp/bash-framework/bash-framework-1781721-rBgQna/bash-framework-1781757-68jUsE/createDefaultEnvFileEnvFile.g0TBpne4LK88
+ Filters::commentLines
+ grep -vxE '[[:blank:]]*(#.*)?'
+ awk -F= '!line[$1]++'
+ set -o allexport
+ source /tmp/bash-framework/bash-framework-1781721-rBgQna/bash-framework-1781757-68jUsE/mergeConfFiles.VYUdfc7MtOyE
++ BASH_FRAMEWORK_LOG_LEVEL=0
++ BASH_FRAMEWORK_DISPLAY_LEVEL=3
++ BASH_FRAMEWORK_LOG_FILE=/home/wsl/.bash-tools/logs/bash.log
++ DB_IMPORT_DUMP_DIR=/home/wsl/.bash-tools/dbImportDumps
++ DB_IMPORT_GARBAGE_COLLECT_DAYS=+30
++ SCRIPTS_FOLDER=/home/wsl/.bash-tools/conf/dbScripts
++ BASH_TOOLS_FOLDER=/home/wsl/projects/bash-tools
++ S3_BASE_URL=s3://ck-dev-frsa-devsql/exports/
++ TEMP_FOLDER=/tmp
++ BASH_FRAMEWORK_THEME=noColor
++ BASH_FRAMEWORK_LOG_FILE_MAX_ROTATION=5
+ source /tmp/bash-framework/bash-framework-1781721-rBgQna/bash-framework-1781757-68jUsE/mergeConfFiles.VYUdfc7MtOyE
++ BASH_FRAMEWORK_LOG_LEVEL=0
++ BASH_FRAMEWORK_DISPLAY_LEVEL=3
++ BASH_FRAMEWORK_LOG_FILE=/home/wsl/.bash-tools/logs/bash.log
++ DB_IMPORT_DUMP_DIR=/home/wsl/.bash-tools/dbImportDumps
++ DB_IMPORT_GARBAGE_COLLECT_DAYS=+30
++ SCRIPTS_FOLDER=/home/wsl/.bash-tools/conf/dbScripts
++ BASH_TOOLS_FOLDER=/home/wsl/projects/bash-tools
++ S3_BASE_URL=s3://ck-dev-frsa-devsql/exports/
++ TEMP_FOLDER=/tmp
++ BASH_FRAMEWORK_THEME=noColor
++ BASH_FRAMEWORK_LOG_FILE_MAX_ROTATION=5
+ set +o allexport
+ Log::requireLoad
+ [[ -z /home/wsl/.bash-tools/logs/bash.log ]]
+ (( BASH_FRAMEWORK_LOG_LEVEL > __LEVEL_OFF ))
+ (( BASH_FRAMEWORK_LOG_LEVEL > __LEVEL_OFF ))
+ [[ -n '' ]]
+ BASH_FRAMEWORK_CONFIG_FILE=
+ Framework::loadConfig BASH_FRAMEWORK_CONFIG_FILE /home/wsl/fchastanet/bash-dev-env/vendor/bash-tools-framework
+ local -n loadConfig_loadedConfigFile=BASH_FRAMEWORK_CONFIG_FILE
+ shift
+ Conf::loadNearestFile .framework-config loadConfig_loadedConfigFile /home/wsl/fchastanet/bash-dev-env/vendor/bash-tools-framework
+ local configFileName=.framework-config
+ local -n loadedFile=loadConfig_loadedConfigFile
+ shift 2
+ srcDirs=("$@")
+ local -a srcDirs
+ for srcDir in "${srcDirs[@]}"
++ File::upFind /home/wsl/fchastanet/bash-dev-env/vendor/bash-tools-framework .framework-config
++ local fromPath=/home/wsl/fchastanet/bash-dev-env/vendor/bash-tools-framework
++ shift
++ local fileName=.framework-config
++ shift
++ local untilInclusivePath=/
++ shift
++ true
++ [[ -f /home/wsl/fchastanet/bash-dev-env/vendor/bash-tools-framework ]]
++ true
++ [[ -f /home/wsl/fchastanet/bash-dev-env/vendor/bash-tools-framework/.framework-config ]]
++ echo /home/wsl/fchastanet/bash-dev-env/vendor/bash-tools-framework/.framework-config
++ return 0
+ configFile=/home/wsl/fchastanet/bash-dev-env/vendor/bash-tools-framework/.framework-config
+ [[ -n /home/wsl/fchastanet/bash-dev-env/vendor/bash-tools-framework/.framework-config ]]
+ source /home/wsl/fchastanet/bash-dev-env/vendor/bash-tools-framework/.framework-config
++ FRAMEWORK_FUNCTIONS_IGNORE_REGEXP='^(Namespace::functions|Functions::myFunction|Namespace::requireSomething|IMPORT::dir::file|Acquire::ForceIPv4)$'
++ NON_FRAMEWORK_FILES_REGEXP='(^bin/|.framework-config|.bats$|/testsData/|^manualTests/|/_.sh$|/ZZZ.sh$|/__all.sh$|^src/_binaries|^src/_includes|^src/batsHeaders.sh$|^src/_standalone)'
++ BATS_FILE_NOT_NEEDED_REGEXP='(^bin/|.framework-config|.bats$|/testsData/|^manualTests/|/_.sh$|/ZZZ.sh$|/__all.sh$|^src/batsHeaders.sh$|^src/_includes)'
++ FRAMEWORK_FILES_FUNCTION_MATCHING_IGNORE_REGEXP='^bin/|^\.framework-config$|^build.sh$|\.tpl$|/testsData/|^manualTests/|\.bats$'
++ FRAMEWORK_SRC_DIRS=("${FRAMEWORK_ROOT_DIR}/src")
++ export REPOSITORY_URL=https://github.com/fchastanet/bash-tools-framework
++ REPOSITORY_URL=https://github.com/fchastanet/bash-tools-framework
+ Log::displayDebug 'Config file /home/wsl/fchastanet/bash-dev-env/vendor/bash-tools-framework/.framework-config is loaded'
+ (( BASH_FRAMEWORK_DISPLAY_LEVEL >= __LEVEL_DEBUG ))
+ Log::logDebug 'Config file /home/wsl/fchastanet/bash-dev-env/vendor/bash-tools-framework/.framework-config is loaded'
+ (( BASH_FRAMEWORK_LOG_LEVEL >= __LEVEL_DEBUG ))
+ loadedFile=/home/wsl/fchastanet/bash-dev-env/vendor/bash-tools-framework/.framework-config
+ return 0
+ [[ 0 = \1 ]]
+ commandCallback
+ [[ localhost = '' ]]
+ [[ 888 = '' ]]
+ Log::displayDebug 'Command waitForIt - parse arguments: --host localhost --port 888 --timeout 1 --algo timeoutV2WithTcp'
+ (( BASH_FRAMEWORK_DISPLAY_LEVEL >= __LEVEL_DEBUG ))
+ Log::logDebug 'Command waitForIt - parse arguments: --host localhost --port 888 --timeout 1 --algo timeoutV2WithTcp'
+ (( BASH_FRAMEWORK_LOG_LEVEL >= __LEVEL_DEBUG ))
+ Log::displayDebug 'Command waitForIt - parse filtered arguments: '
+ (( BASH_FRAMEWORK_DISPLAY_LEVEL >= __LEVEL_DEBUG ))
+ Log::logDebug 'Command waitForIt - parse filtered arguments: '
+ (( BASH_FRAMEWORK_LOG_LEVEL >= __LEVEL_DEBUG ))
+ [[ 0 = \1 ]]
+ run
+ local result=0
+ [[ -n usingTcp ]]
+ whileLoop usingTcp 0
+ local commandToUse=usingTcp
+ local reportTimeout=0
+ Array::contains usingTcp usingTcp usingNc
+ local element
+ for element in "${@:2}"
+ [[ usingTcp = \u\s\i\n\g\T\c\p ]]
+ return 0
+ local -i start_ts=1
+ true
+ usingTcp
+ [[ -n '' ]]
+ echo
bin/waitForIt: connect: Connection refused
bin/waitForIt: line 1635: /dev/tcp/localhost/888: Connection refused
+ ((  optionTimeout!=0 && SECONDS - start_ts > optionTimeout ))
+ sleep 1
Terminated
++ cleanOnExit
++ [[ 0 = \1 ]]
++ [[ -n xxx ]]
++ Log::displayDebug 'KEEP_TEMP_FILES=0 removing temp files '\''/tmp/bash-framework/bash-framework-1781721-rBgQna/bash-framework-1781757-68jUsE'\'''
++ (( BASH_FRAMEWORK_DISPLAY_LEVEL >= __LEVEL_DEBUG ))
++ Log::logDebug 'KEEP_TEMP_FILES=0 removing temp files '\''/tmp/bash-framework/bash-framework-1781721-rBgQna/bash-framework-1781757-68jUsE'\'''
++ (( BASH_FRAMEWORK_LOG_LEVEL >= __LEVEL_DEBUG ))
++ rm -Rf /tmp/bash-framework/bash-framework-1781721-rBgQna/bash-framework-1781757-68jUsE
+ true
+ usingTcp
+ [[ -n '' ]]
+ echo
bin/waitForIt: connect: Connection refused
bin/waitForIt: line 1635: /dev/tcp/localhost/888: Connection refused
+ ((  optionTimeout!=0 && SECONDS - start_ts > optionTimeout ))
+ sleep 1
+ true
+ usingTcp
+ [[ -n '' ]]
+ echo
bin/waitForIt: connect: Connection refused
bin/waitForIt: line 1635: /dev/tcp/localhost/888: Connection refused
+ ((  optionTimeout!=0 && SECONDS - start_ts > optionTimeout ))
+ sleep 1
+ true
+ usingTcp
+ [[ -n '' ]]
+ echo
bin/waitForIt: connect: Connection refused
bin/waitForIt: line 1635: /dev/tcp/localhost/888: Connection refused
+ ((  optionTimeout!=0 && SECONDS - start_ts > optionTimeout ))
+ [[ 0 = \1 ]]
+ return 2
+ result=2
+ exit 2
+ cleanOnExit
+ [[ 0 = \1 ]]
+ [[ -n xxx ]]
+ Log::displayDebug 'KEEP_TEMP_FILES=0 removing temp files '\''/tmp/bash-framework/bash-framework-1781721-rBgQna/bash-framework-1781757-68jUsE'\'''
+ (( BASH_FRAMEWORK_DISPLAY_LEVEL >= __LEVEL_DEBUG ))
+ Log::logDebug 'KEEP_TEMP_FILES=0 removing temp files '\''/tmp/bash-framework/bash-framework-1781721-rBgQna/bash-framework-1781757-68jUsE'\'''
+ (( BASH_FRAMEWORK_LOG_LEVEL >= __LEVEL_DEBUG ))
+ rm -Rf /tmp/bash-framework/bash-framework-1781721-rBgQna/bash-framework-1781757-68jUsE
+ result=124
+ [[ 124 != \0 ]]
+ Log::displayError 'waitForIt - timeout occurred after 3 seconds for localhost:888'
+ (( BASH_FRAMEWORK_DISPLAY_LEVEL >= __LEVEL_ERROR ))
+ echo -e 'ERROR   - waitForIt - timeout occurred after 3 seconds for localhost:888'
ERROR   - waitForIt - timeout occurred after 3 seconds for localhost:888
+ Log::logError 'waitForIt - timeout occurred after 3 seconds for localhost:888'
+ (( BASH_FRAMEWORK_LOG_LEVEL >= __LEVEL_ERROR ))
+ return 124
+ result=124
+ [[ -n '' ]]
+ exit 124
+ cleanOnExit
+ [[ 0 = \1 ]]
+ [[ -n xxx ]]
+ Log::displayDebug 'KEEP_TEMP_FILES=0 removing temp files '\''/tmp/bash-framework/bash-framework-1781721-rBgQna'\'''
+ (( BASH_FRAMEWORK_DISPLAY_LEVEL >= __LEVEL_DEBUG ))
+ Log::logDebug 'KEEP_TEMP_FILES=0 removing temp files '\''/tmp/bash-framework/bash-framework-1781721-rBgQna'\'''
+ (( BASH_FRAMEWORK_LOG_LEVEL >= __LEVEL_DEBUG ))
+ rm -Rf /tmp/bash-framework/bash-framework-1781721-rBgQna
